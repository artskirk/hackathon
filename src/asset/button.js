require('dotenv').config({ path: '../../.env' });
const { OAI_MODEL_GPT_DEFAULT, OAI_GPT4 } = process.env

const button = {
    confirmCreateFollowupEmailAction: {
        message: "Would you like me to create a follow-up emails and request the additional information ?",
        tree: [
            [
                {
                    text: 'Yes',
                    callback_data: 'ticket_create_followup_email'
                },
                {
                    text: 'No',
                    callback_data: 'ticket_search_cancel'
                }  
            ]
        ]
    },
    classifyNewTicketAction: {
        message: "Would you like me to continue with classifying those tickets üôÇ ?",
        tree: [
            [
                {
                    text: 'Yes',
                    callback_data: 'ticket_search_classify'
                },
                {
                    text: 'No',
                    callback_data: 'ticket_search_cancel'
                }  
            ]
        ]
    },
    createTicket: {
        message: "üëã Hello there! I am your virtual assistant. Please select the action you require assistance with:",
        tree: [
            [
                {
                    text: 'New Support Ticket',
                    callback_data: 'ticket_create'
                },
                {
                    text: 'Help solve the issue',
                    callback_data: 'ticket_technical_assist'
                }  
            ]
        ]
    },
    createTicketAfter: {
        message: "‚ÑπÔ∏è Is there anything else I can assist you with ?",
        tree: [
            [
                {
                    text: 'Create one more Ticket',
                    callback_data: 'ticket_create'
                },
                {
                    text: 'Help solve the issue',
                    callback_data: 'ticket_technical_assist'
                }
            ],
            [
                {
                    text: 'Exit',
                    callback_data: 'ticket_create_exit'
                }
            ]
        ]
    },
    issueTroubleshootAfter : {
        message: "I hope my expertise was helpful to you. If there's anything else you need assistance with or if you have any feedback, please let me know. üôÇ",
        tree: [
            [
                {
                    text: 'Create new Ticket',
                    callback_data: 'ticket_create'
                },
                {
                    text: 'Solve one more issue',
                    callback_data: 'ticket_technical_assist'
                }
            ],
            [
                {
                    text: 'Exit',
                    callback_data: 'ticket_create_exit'
                }
            ]
        ]
    },
    voice: {
        message: '‚ÑπÔ∏è Please select the announcer from the given list who will voice your scenario:',
        tree: [
            [
                {
                    text: 'Emily, US',
                    callback_data: 'voice_emily_en'
                },                
                {
                    text: 'Madison, US',
                    callback_data: 'voice_madison_en'
                }
            ],
            [
                {
                    text: 'Ava, US',
                    callback_data: 'voice_ava_en'
                },
                {
                    text: 'Elizabeth, US',
                    callback_data: 'voice_elizabeth_en'
                }               
            ],
            [
                {
                    text: 'Jane, US',
                    callback_data: 'voice_jane_en'
                },
                {
                    text: 'Aiden, US',
                    callback_data: 'voice_aiden_en'
                }
            ],
            [
                {
                    text: 'Benjamin, US',
                    callback_data: 'voice_benjamin_en'
                },
                {
                    text: 'Andrew, US',
                    callback_data: 'voice_andrew_en'
                }
            ],                        
            [
                {
                    text: 'Jacob, US',
                    callback_data: 'voice_jacob_en'
                },                
                {
                    text: 'David, US',
                    callback_data: 'voice_david_en'
                }
            ],
            [
                {
                    text: 'Polina, RU',
                    callback_data: 'voice_polina_ru'
                },
                {
                    text: 'Valeria, RU',
                    callback_data: 'voice_valeria_ru'
                }
            ],
            [  
                {
                    text: 'Valentina, RU',
                    callback_data: 'voice_valentina_ru'
                },             
                {
                    text: 'Ivan, RU',
                    callback_data: 'voice_ivan_ru'
                }
            ],
            [   
                {
                    text: 'Pavel, RU',
                    callback_data: 'voice_pavel_ru'
                },             
                {
                    text: 'Viktor, RU',
                    callback_data: 'voice_viktor_ru'
                }
            ]
        ]
    },
    voiceCreateConfirmation: {
        message: '‚ö†Ô∏è This process may take a few minutes. Would you like to proceed?',
        tree: [
            [
                {
                    text: 'Confirm',
                    callback_data: 'voice_create_confirm'
                },
                {
                    text: 'Cancel',
                    callback_data: 'voice_create_cancel'
                }
            ]
        ]
    },
    voiceAwaitSpeakingRateInput: {
        message: '‚ÑπÔ∏è Value is successfully received',
        tree: [
            [
                {
                    text: 'Set Pitch',
                    callback_data: 'voice_advanced_settings_pitch'
                },
                {
                    text: 'Skip',
                    callback_data: 'voice_advanced_settings_pitch_skip'
                }
            ]
        ]
    },
    voiceAwaitPitchInput: {
        message: '‚ÑπÔ∏è Value is successfully received',
        tree: [
            [
                {
                    text: 'Update Pronunciation Speed',
                    callback_data: 'voice_advanced_settings_speaking_rate'
                }
            ],
            [                
                {
                    text: 'Skip',
                    callback_data: 'voice_advanced_settings_speaking_rate_skip'
                }
            ]
        ]
    },
    voiceAdvancedSettings: {
        message: '‚ö†Ô∏è Would you like to proceed with the advanced voice settings or keep the default settings?',
        tree: [
            [
                {
                    text: 'Proceed',
                    callback_data: 'voice_advanced_settings_proceed'
                },
                {
                    text: 'Keep the default',
                    callback_data: 'voice_advanced_settings_skip'
                }
            ]
        ]
    },
    voiceAdvancedSettingsProceed: {
        message: `‚ö†Ô∏è Now, choose the options for the advanced voice settings. By default, GrademeAI will generate the SSML markup for your text scenario. However, you can disable it if you prefer. For more information about SSML, please visit this link: https://en.wikipedia.org/wiki/Speech_Synthesis_Markup_Language`,
        tree: [
            [
                {
                    text: 'Set Pronunciation Speed',
                    callback_data: 'voice_advanced_settings_speaking_rate'
                }
            ],
            [
                {
                    text: 'Enable SSML',
                    callback_data: 'voice_advanced_settings_enable_ssml'
                },
                {
                    text: 'Disable SSML',
                    callback_data: 'voice_advanced_settings_disable_ssml'
                }
            ],
            [   
                {
                    text: 'Set pitch',
                    callback_data: 'voice_advanced_settings_pitch'
                },             
                {
                    text: 'Cancel',
                    callback_data: 'voice_advanced_settings_cancel'
                }
            ]
        ]
    },
    voiceCreateAfter: {
        message: '‚ÑπÔ∏è Please choose an action to proceed',
        tree: [
            [
                {
                    text: 'New Record',
                    callback_data: 'voice_create_new'
                },
                {
                    text: 'Edit Scenario',
                    callback_data: 'voice_advanced_settings_edit_text_input'
                },
            ],
            [
                
                {
                    text: 'Change Pitch',
                    callback_data: 'voice_advanced_settings_pitch'
                }
            ],
            [
                {
                    text: 'Change Pronunciation Speed',
                    callback_data: 'voice_advanced_settings_speaking_rate'
                }
            ],
            [
                {
                    text: 'Enable SSML',
                    callback_data: 'voice_advanced_settings_enable_ssml'
                },
                {
                    text: 'Disable SSML',
                    callback_data: 'voice_advanced_settings_disable_ssml'
                }
            ],
            [
                {
                    text: 'Use Another Speaker',
                    callback_data: 'voice_advanced_settings_switch_speaker'
                }
            ],
            [
                
                {
                    text: 'Exit',
                    callback_data: 'voice_create_cancel'
                }
            ]
        ]
    },
    ai: {
        message: 'Choose the AI model you would like to use:',
        tree: [
            [
                {
                    text: 'üß† GPT-3.5 Turbo',
                    callback_data: OAI_MODEL_GPT_DEFAULT
                },
                {
                    text: 'üß† GPT-4',
                    callback_data: OAI_GPT4
                }
            ]
        ]
    },
    language: {
        message: 'Select the language:',
        tree: [
            [
                {
                    text: 'üá∫üá∏ En',
                    callback_data: 'en'
                },
                {
                    text: 'üá∑üá∫ Ru',
                    callback_data: 'ru'
                }
            ]
        ]
    },
    translate: {
        message: 'Choose the language would you like to translate your messages: ',
        tree: [
            [
                {
                    text: 'üá∫üá∏ En',
                    callback_data: 'tr_en'
                },
                {
                    text: 'üá∑üá∫ Ru',
                    callback_data: 'tr_ru'
                }
            ],
            [
                {
                    text: 'üá©üá™ De',
                    callback_data: 'tr_de'
                },
                {
                    text: 'üá´üá∑ Fr',
                    callback_data: 'tr_fr'
                }
            ],
            [
                {
                    text: 'üáµüá± Pl',
                    callback_data: 'tr_pl'
                },
                {
                    text: 'üá®üá≥ Cn',
                    callback_data: 'tr_cn'
                }
            ],
            [
                {
                    text: 'üõë Stop',
                    callback_data: 'tr_stop'
                }
            ]
        ]
    },
    reset: {
        message: '‚ö†Ô∏è Are you sure you want to reset your settings to the default ?',
        tree: [
            [
                {
                    text: 'Yes',
                    label: 'Yes',
                    label_ru: '–î–∞',
                    callback_data: 'reset_yes'
                },
                {
                    text: 'No',
                    label: 'No',
                    label_ru: '–ù–µ—Ç',
                    callback_data: 'reset_no'
                }
            ]
        ],
    },
    premiumSubscription: {
        message: 'Would you like to upgrade to a Premium Subscription now for only 2.99 EUR ?',
        tree: [
            [
                {
                    text: 'Yes',
                    label: 'Yes',
                    label_ru: '–î–∞',
                    callback_data: 'premium_subscription_yes'
                },
                {
                    text: 'No',
                    label: 'No',
                    label_ru: '–ù–µ—Ç',
                    callback_data: 'premium_subscription_no'
                }
            ]
        ],
    },
    act: {
        message: 'Please select the sample of the person you would like me to mimic, and I will do my best to match their style and tone.',
        tree: [
            [
                {
                    text: 'ü§ñ Virtual assistant',
                    label: 'Virtual assistant',
                    label_ru: '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç',
                    callback_data: 'virtual_assistant'
                },
                {
                    text: 'üß† Scientist',
                    label: 'Scientist',
                    label_ru: '–£—á–µ–Ω—ã–π',
                    callback_data: 'scientist'
                }
            ],
            [
                {
                    text: 'ü§™ Crazy',
                    label: 'Crazy',
                    label_ru: '–®–∏–∑–æ—Ñ—Ä–µ–Ω–∏–∫',
                    callback_data: 'crazy'
                },
                {
                    text: 'üë®‚Äçü¶± Personal coach',
                    label: 'Personal coach',
                    label_ru: '–¢—Ä–µ–Ω–µ—Ä –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞',
                    callback_data: 'personal_coach'
                }
            ],
            [
                {
                    text: 'üëå Matchmaker',
                    label: 'Matchmaker',
                    label_ru: '–°–≤–∞—Ö–∞',
                    callback_data: 'matchmaker'
                },
                {
                    text: 'üòé Personal companion',
                    label: 'Personal companion',
                    label_ru: '–ü—Ä–∏—è—Ç–µ–ª—å',
                    callback_data: 'personal_companion'
                }
            ],
            [
                {
                    text: 'üëó Fashion consultant',
                    label: 'Fashion consultant',
                    label_ru: '–°—Ç–∏–ª–∏—Å—Ç',
                    callback_data: 'fashion_consultant'
                },
                {
                    text: 'üí™ Fitness trainer',
                    label: 'Fitness trainer',
                    label_ru: '–§–∏—Ç–Ω–µ—Å-–∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä',
                    callback_data: 'fitness_trainer'
                }
            ],
            [
                {
                    text: 'üí∏ Financial advisor',
                    label: 'Financial advisor',
                    label_ru: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
                    callback_data: 'financial_advisor'
                },
                {
                    text: 'üá∫üá∏ Language tutor',
                    label: 'Language tutor',
                    label_ru: '–õ–∏—á–Ω—ã–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä',
                    callback_data: 'language_tutor'
                }
            ],
            [
                {
                    text: 'üßòüèº‚Äç‚ôÄÔ∏è Life coach',
                    label: 'Life coach',
                    label_ru: '–ñ–∏–∑–Ω–µ–Ω–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫',
                    callback_data: 'life_coach'
                },
                {
                    text: 'üíµ Business coach',
                    label: 'Business coach',
                    label_ru: '–ë–∏–∑–Ω–µ—Å —Ç—Ä–µ–Ω–µ—Ä',
                    callback_data: 'business_coach'
                }
            ],
            [
                {
                    text: 'ü¶π‚Äç‚ôÇÔ∏è Street tough',
                    label: 'Street tough',
                    label_ru: '–ì–æ–ø–Ω–∏–∫',
                    callback_data: 'street_tough'
                },
                {
                    text: 'üé§ Interviewer',
                    label: 'Interviewer',
                    label_ru: '–ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä',
                    callback_data: 'interviewer'
                }
            ],
            [
                {
                    text: 'ü•∏ Preacher',
                    label: 'Preacher',
                    label_ru: '–¶–µ—Ä–∫–æ–≤–Ω—ã–π –ø—Ä–æ–ø–æ–≤–µ–¥–Ω–∏–∫',
                    callback_data: 'preacher'
                },
                {
                    text: 'üòâ Buddy',
                    label: 'Buddy',
                    label_ru: '—Å–ª–æ–≤–Ω–æ —Ç—ã –º–æ–π –¥—Ä—É–≥',
                    callback_data: 'buddy'
                }
            ],
            [
                {
                    text: 'üíô Boyfriend',
                    label: 'Boyfriend',
                    label_ru: '—Å–ª–æ–≤–Ω–æ —Ç—ã –º–æ–π –ø–∞—Ä–µ–Ω—å',
                    callback_data: 'boyfriend'
                },
                {
                    text: '‚ù§Ô∏è Girlfriend',
                    label: 'Girlfriend',
                    label_ru: '—Å–ª–æ–≤–Ω–æ —Ç—ã –º–æ—è –¥–µ–≤—É—à–∫–∞',
                    callback_data: 'girlfriend'
                }
            ],
            [
                {
                    text: 'üßë‚Äç‚öïÔ∏è Personal psychologist',
                    label: 'Personal psychologist',
                    label_ru: '—Å–ª–æ–≤–Ω–æ –º–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥',
                    callback_data: 'psychologist'
                }
            ],
            [
                {
                    text: 'üöÄ Artificial Intelligence',
                    label: 'Artificial Intelligence',
                    label_ru: '–ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç',
                    callback_data: 'ai'
                }
            ]
        ]
    }
};

module.exports = { button };